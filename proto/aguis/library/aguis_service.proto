syntax = "proto3";

package library;

message Enrollment {
    uint64 id = 1;
    uint64 courseid = 2;
    uint64 userid = 3;
    uint64 groupid = 4;
    uint32 status = 5;
    User user = 6;
    Course course = 7;
    Group group = 8;
}

message EnrollemntResponse {
    repeated Enrollment enrollments = 1;
}

message User {
    uint64 id = 1;
    bool isadmin = 2;
    string name = 3;
    string studentid = 4;
    string email = 5;
    string avatarurl = 6;

    repeated Enrollment enrollments = 7;
}

message UsersResponse {
    repeated User Users = 1;
}

message Void {}

// GetRecordRecord can be used for all type of single record request like User, Course etc
message GetRecordRequest {
    uint64 id = 1;
}

message UpdateUserRequest {
    User User = 1;
}

message Assignment {
    uint64 id = 1;
    uint64 courseid = 2;
    string name = 3;
    string language = 4;
    string deadline = 5;
    bool autoapprove = 6;
    uint32 order = 7;
    Submission submission = 8;

}

message Submission {
    uint64 id = 1;
    uint64 assignmentid = 2;
    uint64 userid = 3;
    uint64 groupid = 4;
    uint32 score = 5;
    string scoreobjects = 6;
    string buildinfo = 7;
    string commithash = 8;
}

message Assignments {
    repeated Assignment assignments = 1;
}

message Group {

}

message Course {
    uint64 id = 1;
    string name = 2;
    string code = 3;
    uint32 year = 4;
    string tag = 5;
    string provider = 6;
    uint64 directoryid = 7;
    int32 enrolled = 8;
    repeated Assignment assignments = 9;
    repeated Group groups = 10;
}

message Courses {
    repeated Course Courses = 1;
}

message RecordWithStatusRequest {
    uint64 id = 1; // id can be User ID or Course ID depending
    string state = 2;
}


service AutograderService {
    rpc GetUser (GetRecordRequest) returns (User) {}
    rpc GetUsers (Void) returns (UsersResponse) {}
    rpc UpdateUser(UpdateUserRequest) returns (User) {}

    rpc CreateCourse(Course) returns (Course) {}
    rpc GetCourse(GetRecordRequest) returns (Course) {}
    rpc UpdateCourse(Course) returns (Course) {}
    rpc GetCourses(Void) returns (Courses) {}
    rpc GetCoursesWithEnrollment(RecordWithStatusRequest) returns (Courses) {}
    rpc GetAssignments(GetRecordRequest) returns (Assignments) {}
    rpc GetEnrollmentsByCourse(RecordWithStatusRequest) returns (EnrollemntResponse) {}
}